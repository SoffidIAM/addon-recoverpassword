<?xml version="1.0" encoding="UTF-8"?>

<zkib-model>
	<datanode name="recover-password">
		<finder name="default_questions" type="default_questions">
			<ejb-finder
				jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService"
				method="findAllDefaultQuestions" if="${canQueryDefaultQuestions}"> 
			</ejb-finder>
			<new-instance-bean
				className="com.soffid.iam.addons.passrecover.common.DefaultQuestion" />
		</finder>

		<finder name="configuration" type="configuration">
			<ejb-finder
				jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService"
				method="getRecoverPassConfiguration" if="${canQueryDefaultQuestions}"> 
			</ejb-finder>
			<new-instance-bean
				className="com.soffid.iam.addons.passrecover.common.RecoverPassConfig" />
		</finder>

		<finder name="requireAction" type="requireAction">
			<script-finder>
				c = new java.util.LinkedList();
				c.add(com.soffid.iam.addons.passrecover.common.RequireQuestion.DISABLED);
				c.add(com.soffid.iam.addons.passrecover.common.RequireQuestion.REQUIRED);
				c.add(com.soffid.iam.addons.passrecover.common.RequireQuestion.OPTIONAL);

				return c;
			</script-finder>
		</finder>

		<finder name="user_answers" type="user_answers">
			<ejb-finder
				jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService"
				method="findUserAnswersByUserName"> 
				<parameter value="${userCode}" />
			</ejb-finder>
			<new-instance-bean
				className="com.soffid.iam.addons.passrecover.common.UserAnswer" />
		</finder>
	</datanode>

	<datanode name="challenge">
		<finder name="request_challenge" type="request_challenge">
			<ejb-finder
				jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService"
				method="requestChallenge">
			</ejb-finder>
			<new-instance-bean
				className="com.soffid.iam.addons.passrecover.common.RecoverPasswordChallenge" />
		</finder>
	</datanode>

	<datanode name="default_questions">
		<ejb-handler
			jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="delete">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>

	<datanode name="configuration">
		<ejb-handler
			jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService">
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
	</datanode>

	<datanode name="requireAction">
		<custom-attribute name="reqActionLiteral">
			return
			org.zkoss.util.resource.Labels.getLabel("RequireQuestion."
			+ instance.toString());
		</custom-attribute>
	</datanode>

	<datanode name="user_answers">
		<ejb-handler
			jndi="openejb:/local/soffid.ejb.com.soffid.iam.addons.passrecover.service.RecoverPasswordService">
			<insert-method method="create" returnBean="true">
				<parameter value="${instance}" />
			</insert-method>
			<delete-method method="remove">
				<parameter value="${instance}" />
			</delete-method>
			<update-method method="update">
				<parameter value="${instance}" />
			</update-method>
		</ejb-handler>
		<validator>
			<attribute-validator expr="${instance.question}"
				notNull="true" friendlyName="Question can not be null" />
		</validator>
	</datanode>
	
	<datanode name="challenge"/>
</zkib-model>
